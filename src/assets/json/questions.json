[
  {
    "question": "What does the following code do?",
    "codeSnippet": "void greet() {\n  std::cout << 'Hello, world!' << std::endl;\n}",
    "options": [
      "Prints 'Hello, world!' to the console",
      "Defines a function named 'greet'",
      "Throws an error",
      "None of the above"
    ],
    "correctAnswer": "Prints 'Hello, world!' to the console"
  },
  {
    "question": "What is the output of this function?",
    "codeSnippet": "int add(int a, int b) {\n  return a + b;\n}\nstd::cout << add(2, 3);\n",
    "options": ["5", "23", "undefined", "NaN"],
    "correctAnswer": "5"
  },
  {
    "question": "Which of the following is correct syntax for a C++ function?",
    "codeSnippet": "void myFunc() {\n  std::cout << 'Hello';\n}",
    "options": [
      "void myFunc() { }",
      "function myFunc() { }",
      "myFunc function() { }",
      "None of the above"
    ],
    "correctAnswer": "void myFunc() { }"
  },
  {
    "question": "What will be printed to the console for this code?",
    "codeSnippet": "int x = 10;\nif (x > 5) {\n  std::cout << 'Greater';\n} else {\n  std::cout << 'Smaller';\n}",
    "options": ["'Greater'", "'Smaller'", "'Error'", "'undefined'"],
    "correctAnswer": "'Greater'"
  },
  {
    "question": "What does 'auto' do in C++?",
    "codeSnippet": "auto x = 10;\nstd::cout << x;\n",
    "options": [
      "Automatically determines the type of a variable",
      "Declares a constant variable",
      "Declares a function",
      "None of the above"
    ],
    "correctAnswer": "Automatically determines the type of a variable"
  },
  {
    "question": "What will be the result of this code?",
    "codeSnippet": "std::vector<int> arr = {1, 2, 3};\narr.push_back(4);\nstd::cout << arr[3];",
    "options": ["4", "3", "1", "undefined"],
    "correctAnswer": "4"
  },
  {
    "question": "How can you remove an element from the end of a vector in C++?",
    "codeSnippet": "std::vector<int> arr = {1, 2, 3, 4};\narr.pop_back();\nstd::cout << arr.size();",
    "options": [
      "arr.pop_back()",
      "arr.remove()",
      "arr.shift()",
      "None of the above"
    ],
    "correctAnswer": "arr.pop_back()"
  },
  {
    "question": "What does 'this' refer to in the following code?",
    "codeSnippet": "class Person {\npublic:\n  std::string name;\n  void greet() {\n    std::cout << this->name;\n  }\n};\nPerson p;\np.greet();",
    "options": [
      "The instance of the 'Person' class",
      "The global object",
      "The 'name' variable",
      "None of the above"
    ],
    "correctAnswer": "The instance of the 'Person' class"
  },
  {
    "question": "Which of the following is the correct way to declare a pointer in C++?",
    "codeSnippet": "int* ptr;\nptr = &x;\n",
    "options": [
      "int* ptr;",
      "int ptr*;",
      "pointer int* ptr;",
      "None of the above"
    ],
    "correctAnswer": "int* ptr;"
  },
  {
    "question": "What will the following code print?",
    "codeSnippet": "std::cout << (5 == 5) ? 'True' : 'False';",
    "options": ["True", "False", "Error", "undefined"],
    "correctAnswer": "True"
  },
  {
    "question": "Which of the following is used to handle exceptions in C++?",
    "codeSnippet": "try {\n  int x = 5 / 0;\n} catch (const std::exception& e) {\n  std::cout << e.what();\n}",
    "options": ["try...catch", "throw", "finally", "All of the above"],
    "correctAnswer": "try...catch"
  },
  {
    "question": "What is the purpose of a 'constructor' in C++?",
    "codeSnippet": "class Person {\npublic:\n  Person() { std::cout << 'Constructor called'; }\n};\nPerson p;",
    "options": [
      "To initialize an object when it is created",
      "To delete an object when it is destroyed",
      "To call a function at the start of a program",
      "None of the above"
    ],
    "correctAnswer": "To initialize an object when it is created"
  },
  {
    "question": "Which of the following can be used to create an object in C++?",
    "codeSnippet": "Person p;\n",
    "options": [
      "Object literal",
      "Class constructor",
      "Factory function",
      "All of the above"
    ],
    "correctAnswer": "Class constructor"
  },
  {
    "question": "Which method is used to add an element to the beginning of a vector?",
    "codeSnippet": "std::vector<int> arr = {1, 2, 3};\narr.insert(arr.begin(), 0);\nstd::cout << arr[0];",
    "options": [
      "arr.insert()",
      "arr.push_back()",
      "arr.add()",
      "arr.unshift()"
    ],
    "correctAnswer": "arr.insert()"
  },
  {
    "question": "What is the purpose of the 'virtual' keyword in C++?",
    "codeSnippet": "class Base {\npublic:\n  virtual void speak() {\n    std::cout << 'Base speaking';\n  }\n};\nclass Derived : public Base {\npublic:\n  void speak() override {\n    std::cout << 'Derived speaking';\n  }\n};",
    "options": [
      "To allow function overriding in derived classes",
      "To declare a constant function",
      "To declare a constructor",
      "None of the above"
    ],
    "correctAnswer": "To allow function overriding in derived classes"
  },
  {
    "question": "What does the 'new' keyword do in C++?",
    "codeSnippet": "int* ptr = new int(10);",
    "options": [
      "Allocates memory for an object or variable",
      "Deallocates memory for an object or variable",
      "Defines a new function",
      "None of the above"
    ],
    "correctAnswer": "Allocates memory for an object or variable"
  },
  {
    "question": "What does the following code return?",
    "codeSnippet": "int test() {\n  return sizeof(int);\n}",
    "options": ["4", "8", "2", "undefined"],
    "correctAnswer": "4"
  },
  {
    "question": "Which of the following data types are used in C++ for storing numbers?",
    "codeSnippet": "",
    "options": [
      "int, float, double",
      "char, string, int",
      "bool, int, double",
      "All of the above"
    ],
    "correctAnswer": "int, float, double"
  },
  {
    "question": "Which of the following is NOT a primitive data type in C++?",
    "codeSnippet": "",
    "options": ["std::string", "int", "double", "bool"],
    "correctAnswer": "std::string"
  },
  {
    "question": "What is the result of the following code?",
    "codeSnippet": "std::string s = 'hello';\ns[0] = 'H';\nstd::cout << s;",
    "options": ["'Hello'", "'hello'", "'H'"],
    "correctAnswer": "'Hello'"
  },
  {
    "question": "Which of the following is the correct syntax for a while loop in C++?",
    "codeSnippet": "int i = 0;\nwhile (i < 5) {\n  std::cout << i << '\\n';\n  i++;\n}",
    "options": [
      "while (i < 5) {...}",
      "for (i = 0; i < 5; i++) {...}",
      "repeat (i < 5) {...}",
      "None of the above"
    ],
    "correctAnswer": "while (i < 5) {...}"
  },
  {
    "question": "Which operator is used to access members of a class in C++?",
    "codeSnippet": "class Person {\npublic:\n  std::string name;\n};\nPerson p;\np.name = 'Alice';",
    "options": [".", "->", "&", "None of the above"],
    "correctAnswer": "."
  }
]
